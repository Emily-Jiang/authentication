<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2024 Contributors to Eclipse Foundation.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.ee4j.tck.authentication</groupId>
        <artifactId>jakarta-authentication-tck</artifactId>
        <version>3.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>spi</artifactId>
    <packaging>pom</packaging>

     <name>Jakarta Authentication TCK - Profile SPI Parent</name>
     <description>
        A lot of tests about the nitty gritty regarding the SPI per profile.
     </description>

    <modules>
        <!--
            The common module primarily contains a special AuthConfigFactory (the TSSV) that is installed
            using a ServletContainerInitializer. This AuthConfigFactory traces a lot of operations
            on it to a logging file (saved to location set by system property "log.file.location").
            This logging file is read by the (client side) tests, which verify whether specific entries are
            present or absent in said log file.
            
            Via this tracing AuthConfigFactory, a large number of other artefacts are vended, which 
            all do their own tracing for the operations invoked on them.
            
            The common module also contains an amount of test code, which is invoked by several artefacts
            in both the Servlet and Web profile. 
        -->
        <module>common</module>
        
        <!-- 
            A number of SPI tests specifically for the Servlet Container Profile, and some general tests for 
            functionality the Servlet Container Profile should support (the baseline functionality for Jakarta
            Authentication).
            
            Contains both server side integration tests (which run on a servlet container) as well as unit-like tests
            that execute on the client outside of any container.  
         -->
        <module>servlet</module>
        
        <!-- 
            A number of SPI tests specifically for the SOAP Profile, and some general tests for 
            functionality the SOAP Profile should support (the baseline functionality for Jakarta
            Authentication).
            
            Contains both server side integration tests (which run on SOAP on top of a Servlet container) as well as 
            unit-like tests that execute on the client outside of any container.  
         -->
        <module>soap</module>
    </modules>
    
</project>
